name: Modern CI (Simplified)

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  # Unit and Feature Tests
  pest-tests:
    name: Unit & Feature Tests (PHP ${{ matrix.php-version }})
    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: false
      matrix:
        php-version: [8.4]

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: jordanpartridge_testing
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=5

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
    
    - name: Setup PHP ${{ matrix.php-version }}
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-version }}
        extensions: mbstring, xml, ctype, iconv, mysql, gd, zip
        coverage: xdebug

    - name: Cache Composer Dependencies
      uses: actions/cache@v4
      with:
        path: vendor
        key: composer-${{ runner.os }}-${{ matrix.php-version }}-${{ hashFiles('composer.lock') }}
        restore-keys: composer-${{ runner.os }}-${{ matrix.php-version }}-

    - name: Cache Node Dependencies
      uses: actions/cache@v4
      with:
        path: node_modules
        key: node-${{ runner.os }}-${{ hashFiles('package-lock.json') }}
        restore-keys: node-${{ runner.os }}-

    - name: Install Dependencies
      run: |
        composer install --no-interaction --prefer-dist --optimize-autoloader
        npm install
        npm run build

    - name: Setup Environment
      run: |
        cp .env.example .env
        echo "DB_CONNECTION=mysql" >> .env
        echo "DB_DATABASE=jordanpartridge_testing" >> .env
        echo "DB_PORT=3306" >> .env
        echo "DB_HOST=127.0.0.1" >> .env
        echo "DB_USERNAME=root" >> .env
        echo "DB_PASSWORD=password" >> .env
        echo "OPENAI_API_KEY=${{ secrets.OPEN_AI_API_KEY }}" >> .env
        echo "CARD_API_BASE_URL=${{ secrets.CARD_API_BASE_URL }}" >> .env
        echo "CARD_API_KEY=${{ secrets.CARD_API_KEY }}" >> .env

    - name: Generate Application Keys
      run: |
        php artisan key:generate
        php artisan key:generate --env=testing

    - name: Set Permissions
      run: chmod -R 777 storage bootstrap/cache

    - name: Run Database Migrations
      run: php artisan migrate --force

    - name: Run Pest Tests
      run: php artisan test --parallel --coverage-clover=coverage.xml

    - name: Upload Coverage
      if: matrix.php-version == '8.4'
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        fail_ci_if_error: false

  # Browser Tests with Modern Dusk (No Selenium needed!)
  dusk-tests:
    name: Browser Tests (Dusk + Chrome)
    runs-on: ubuntu-latest
    needs: pest-tests
    timeout-minutes: 20

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: jordanpartridge_testing
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=5

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Setup PHP 8.4
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.4'
        extensions: mbstring, xml, ctype, iconv, mysql, gd, zip
        coverage: none

    - name: Install Google Chrome
      uses: browser-actions/setup-chrome@v1
      with:
        chrome-version: stable

    - name: Cache Dependencies
      uses: actions/cache@v4
      with:
        path: |
          vendor
          node_modules
        key: deps-${{ runner.os }}-${{ hashFiles('composer.lock', 'package-lock.json') }}
        restore-keys: deps-${{ runner.os }}-

    - name: Install Dependencies
      run: |
        composer install --no-interaction --prefer-dist --optimize-autoloader
        npm install
        npm run build

    - name: Setup Environment
      run: |
        cp .env.example .env
        echo "APP_URL=http://127.0.0.1:8000" >> .env
        echo "DB_CONNECTION=mysql" >> .env
        echo "DB_DATABASE=jordanpartridge_testing" >> .env
        echo "DB_PORT=3306" >> .env
        echo "DB_HOST=127.0.0.1" >> .env
        echo "DB_USERNAME=root" >> .env
        echo "DB_PASSWORD=password" >> .env
        echo "OPENAI_API_KEY=${{ secrets.OPEN_AI_API_KEY }}" >> .env
        echo "CARD_API_BASE_URL=${{ secrets.CARD_API_BASE_URL }}" >> .env
        echo "CARD_API_KEY=${{ secrets.CARD_API_KEY }}" >> .env

    - name: Generate Application Keys
      run: |
        php artisan key:generate
        php artisan key:generate --env=testing

    - name: Set Permissions
      run: chmod -R 777 storage bootstrap/cache

    - name: Run Database Migrations
      run: php artisan migrate --force

    - name: Start Laravel Server
      run: php artisan serve --host=127.0.0.1 --port=8000 &

    - name: Wait for Server
      run: |
        for i in {1..30}; do
          if curl -f -s http://127.0.0.1:8000 >/dev/null 2>&1; then
            echo "✅ Server ready!"
            break
          fi
          echo "⏳ Waiting... ($i/30)"
          sleep 2
        done

    - name: Run Dusk Tests
      run: |
        echo "🧪 Running browser tests with headless Chrome..."
        php artisan dusk

    - name: Upload Screenshots on Failure
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: dusk-screenshots
        path: tests/Browser/screenshots/
        retention-days: 3

    - name: Upload Logs on Failure
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: laravel-logs
        path: storage/logs/
        retention-days: 3