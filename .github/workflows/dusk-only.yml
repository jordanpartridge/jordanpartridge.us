name: Dusk Browser Tests Only

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  setup:
    uses: ./.github/workflows/setup-shared.yml

  dusk-tests:
    name: Browser Tests (Dusk)
    needs: setup
    runs-on: ubuntu-latest
    timeout-minutes: 10

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: jordanpartridge_testing
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=5

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Setup PHP 8.4
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.4'
        extensions: mbstring, xml, ctype, iconv, mysql, gd, zip
        coverage: none

    - name: Restore Composer Cache
      uses: actions/cache@v4
      with:
        path: vendor
        key: composer-${{ runner.os }}-${{ hashFiles('composer.lock') }}
        restore-keys: composer-${{ runner.os }}-

    - name: Restore Node Cache
      uses: actions/cache@v4
      with:
        path: node_modules
        key: node-${{ runner.os }}-${{ hashFiles('package-lock.json') }}
        restore-keys: node-${{ runner.os }}-

    - name: Restore Built Assets
      uses: actions/cache@v4
      with:
        path: |
          public/js
          public/css
        key: assets-${{ runner.os }}-${{ github.sha }}

    - name: Fallback Asset Build
      run: |
        # If assets weren't cached properly, build them now
        if [ ! -f "public/js/app.js" ] || [ ! -f "public/css/app.css" ]; then
          echo "‚ö†Ô∏è Assets not found, building now..."
          npm run build
        else
          echo "‚úÖ Assets found from cache"
        fi

    - name: Setup Environment
      run: |
        cp .env.example .env
        echo "APP_ENV=testing" >> .env
        echo "APP_DEBUG=false" >> .env
        echo "DEBUGBAR_ENABLED=false" >> .env
        echo "DEBUGBAR_INJECT=false" >> .env
        echo "APP_URL=http://127.0.0.1:8000" >> .env
        echo "DB_CONNECTION=mysql" >> .env
        echo "DB_DATABASE=jordanpartridge_testing" >> .env
        echo "DB_PORT=3306" >> .env
        echo "DB_HOST=127.0.0.1" >> .env
        echo "DB_USERNAME=root" >> .env
        echo "DB_PASSWORD=password" >> .env
        echo "OPENAI_API_KEY=test_key" >> .env
        echo "CARD_API_BASE_URL=http://example.com" >> .env
        echo "CARD_API_KEY=test_key" >> .env

    - name: Generate Application Keys
      run: |
        php artisan key:generate
        php artisan key:generate --env=testing

    - name: Set Permissions
      run: chmod -R 777 storage bootstrap/cache

    - name: Run Database Migrations
      run: php artisan migrate --force

    - name: Seed Database
      run: php artisan db:seed --force

    - name: Setup Virtual Display
      run: |
        sudo apt-get update
        sudo apt-get install -y xvfb
        # Start virtual display on :99
        sudo Xvfb :99 -ac -screen 0 1920x1080x24 &
        echo "DISPLAY=:99" >> $GITHUB_ENV

    - name: Install Google Chrome
      uses: browser-actions/setup-chrome@v1
      with:
        chrome-version: stable

    - name: Install ChromeDriver
      run: php artisan dusk:chrome-driver --detect

    - name: Test ChromeDriver Startup
      run: |
        echo "üß™ Testing ChromeDriver startup manually..."
        vendor/laravel/dusk/bin/chromedriver-linux --version
        # Start ChromeDriver in background for Dusk to use
        vendor/laravel/dusk/bin/chromedriver-linux --port=9515 --whitelisted-ips= &
        CHROMEDRIVER_PID=$!
        echo "ChromeDriver PID: $CHROMEDRIVER_PID"
        
        # Wait a moment for startup
        sleep 3
        
        # Test if it's responding
        curl -f http://localhost:9515/status || echo "‚ùå ChromeDriver not responding"
        
        # Leave it running for Dusk tests to use
        echo "‚úÖ Leaving ChromeDriver running for Dusk tests (PID: $CHROMEDRIVER_PID)"

    - name: Debug Pre-Server State
      run: |
        echo "üîç Checking application state before starting server..."
        echo "Built assets:"
        ls -la public/js/ public/css/ || echo "‚ùå Asset directories not found"
        echo "Environment:"
        php artisan env
        echo "Routes check:"
        php artisan route:list --compact | head -10

    - name: Start Laravel Server
      run: |
        echo "üöÄ Starting Laravel server..."
        php artisan serve --host=127.0.0.1 --port=8000 > server.log 2>&1 &
        SERVER_PID=$!
        echo "Server PID: $SERVER_PID"
        sleep 2
        echo "Server log (first few lines):"
        head -10 server.log || echo "No server log yet"

    - name: Wait for Server
      run: |
        echo "‚è≥ Waiting for server to respond..."
        for i in {1..30}; do
          if curl -f -s http://127.0.0.1:8000 >/dev/null 2>&1; then
            echo "‚úÖ Server ready!"
            echo "Server response test:"
            curl -s http://127.0.0.1:8000 | head -5
            break
          fi
          echo "‚è≥ Waiting... ($i/30)"
          if [ $i -eq 15 ]; then
            echo "üîç Server log after 15 attempts:"
            cat server.log || echo "No server log"
          fi
          sleep 2
        done

    - name: Debug Dusk Setup
      run: |
        echo "üìã Environment Check:"
        echo "APP_URL: $APP_URL"
        echo "DISPLAY: $DISPLAY"
        echo "Chrome version: $(google-chrome --version)"
        echo "ChromeDriver should be at: vendor/laravel/dusk/bin/chromedriver-linux"
        ls -la vendor/laravel/dusk/bin/ || echo "‚ùå ChromeDriver not found"
        ps aux | grep chrome || echo "No Chrome processes"
        ps aux | grep Xvfb || echo "No Xvfb processes"
        
    - name: Run Dusk Tests
      run: php artisan dusk --env=testing --without-tty

    - name: Upload Screenshots on Failure
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: dusk-screenshots
        path: tests/Browser/screenshots/
        retention-days: 3